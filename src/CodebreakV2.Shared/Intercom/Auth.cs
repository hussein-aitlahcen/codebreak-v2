// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: auth.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace CodebreakV2.Shared.Intercom {

  /// <summary>Holder for reflection information generated from auth.proto</summary>
  public static partial class AuthReflection {

    #region Descriptor
    /// <summary>File descriptor for auth.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AuthReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgphdXRoLnByb3RvEhtDb2RlYnJlYWtWMi5TaGFyZWQuSW50ZXJjb20aDHNo",
            "YXJlZC5wcm90byJDCgpCYW5SZXF1ZXN0EjUKB2FjY291bnQYASABKAsyJC5D",
            "b2RlYnJlYWtWMi5TaGFyZWQuSW50ZXJjb20uQWNjb3VudCJ8CgtCYW5SZXNw",
            "b25zZRI1CgdhY2NvdW50GAEgASgLMiQuQ29kZWJyZWFrVjIuU2hhcmVkLklu",
            "dGVyY29tLkFjY291bnQSNgoGcmVzdWx0GAIgASgOMiYuQ29kZWJyZWFrVjIu",
            "U2hhcmVkLkludGVyY29tLkJhblJlc3VsdCoxCglCYW5SZXN1bHQSCwoHU1VD",
            "Q0VTUxAAEgsKB0FMUkVBRFkQARIKCgZGQUlMRUQQAjJnCgtBdXRoU2Vydmlj",
            "ZRJYCgNCYW4SJy5Db2RlYnJlYWtWMi5TaGFyZWQuSW50ZXJjb20uQmFuUmVx",
            "dWVzdBooLkNvZGVicmVha1YyLlNoYXJlZC5JbnRlcmNvbS5CYW5SZXNwb25z",
            "ZWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::CodebreakV2.Shared.Intercom.SharedReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::CodebreakV2.Shared.Intercom.BanResult), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::CodebreakV2.Shared.Intercom.BanRequest), global::CodebreakV2.Shared.Intercom.BanRequest.Parser, new[]{ "Account" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CodebreakV2.Shared.Intercom.BanResponse), global::CodebreakV2.Shared.Intercom.BanResponse.Parser, new[]{ "Account", "Result" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum BanResult {
    [pbr::OriginalName("SUCCESS")] Success = 0,
    [pbr::OriginalName("ALREADY")] Already = 1,
    [pbr::OriginalName("FAILED")] Failed = 2,
  }

  #endregion

  #region Messages
  public sealed partial class BanRequest : pb::IMessage<BanRequest> {
    private static readonly pb::MessageParser<BanRequest> _parser = new pb::MessageParser<BanRequest>(() => new BanRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BanRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CodebreakV2.Shared.Intercom.AuthReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BanRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BanRequest(BanRequest other) : this() {
      Account = other.account_ != null ? other.Account.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BanRequest Clone() {
      return new BanRequest(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private global::CodebreakV2.Shared.Intercom.Account account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CodebreakV2.Shared.Intercom.Account Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BanRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BanRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Account, other.Account)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (account_ != null) hash ^= Account.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (account_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Account);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BanRequest other) {
      if (other == null) {
        return;
      }
      if (other.account_ != null) {
        if (account_ == null) {
          account_ = new global::CodebreakV2.Shared.Intercom.Account();
        }
        Account.MergeFrom(other.Account);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (account_ == null) {
              account_ = new global::CodebreakV2.Shared.Intercom.Account();
            }
            input.ReadMessage(account_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BanResponse : pb::IMessage<BanResponse> {
    private static readonly pb::MessageParser<BanResponse> _parser = new pb::MessageParser<BanResponse>(() => new BanResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BanResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CodebreakV2.Shared.Intercom.AuthReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BanResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BanResponse(BanResponse other) : this() {
      Account = other.account_ != null ? other.Account.Clone() : null;
      result_ = other.result_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BanResponse Clone() {
      return new BanResponse(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private global::CodebreakV2.Shared.Intercom.Account account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CodebreakV2.Shared.Intercom.Account Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 2;
    private global::CodebreakV2.Shared.Intercom.BanResult result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CodebreakV2.Shared.Intercom.BanResult Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BanResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BanResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Account, other.Account)) return false;
      if (Result != other.Result) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (account_ != null) hash ^= Account.GetHashCode();
      if (Result != 0) hash ^= Result.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (account_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Account);
      }
      if (Result != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Result);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BanResponse other) {
      if (other == null) {
        return;
      }
      if (other.account_ != null) {
        if (account_ == null) {
          account_ = new global::CodebreakV2.Shared.Intercom.Account();
        }
        Account.MergeFrom(other.Account);
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (account_ == null) {
              account_ = new global::CodebreakV2.Shared.Intercom.Account();
            }
            input.ReadMessage(account_);
            break;
          }
          case 16: {
            result_ = (global::CodebreakV2.Shared.Intercom.BanResult) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
